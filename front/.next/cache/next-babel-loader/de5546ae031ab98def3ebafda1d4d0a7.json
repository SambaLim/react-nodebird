{"ast":null,"code":"import { all, fork, takeLatest, call, put } from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user';\n\nfunction loginAPI() {// 서버에 요청\n}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN, login);\n}\n\nfunction* helloSaga() {\n  console.log('hello saga');\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), helloSaga]);\n}","map":{"version":3,"sources":["C:/playground/reactNodebird/nodebird/front/saga/user.js"],"names":["all","fork","takeLatest","call","put","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","loginAPI","login","type","e","watchLogin","helloSaga","console","log","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,cAAjC,QAAuD,kBAAvD;;AAEA,SAASC,QAAT,GAAoB,CAChB;AACH;;AAED,UAAUC,KAAV,GAAkB;AACd,MAAI;AACA,UAAMN,IAAI,CAACK,QAAD,CAAV;AACA,UAAMJ,GAAG,CAAC;AACNM,MAAAA,IAAI,EAAEJ;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMK,CAAN,EAAS;AACP,UAAMP,GAAG,CAAC;AACNM,MAAAA,IAAI,EAAEH;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUK,UAAV,GAAuB;AACnB,QAAMV,UAAU,CAACG,MAAD,EAASI,KAAT,CAAhB;AACH;;AAED,UAAUI,SAAV,GAAsB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;AAED,eAAe,UAAUC,QAAV,GAAqB;AAChC,QAAMhB,GAAG,CAAC,CACNC,IAAI,CAACW,UAAD,CADE,EAENC,SAFM,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, takeLatest, call, put } from 'redux-saga/effects'\r\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user'\r\n\r\nfunction loginAPI() {\r\n    // 서버에 요청\r\n}\r\n\r\nfunction* login() {\r\n    try {\r\n        yield call(loginAPI)\r\n        yield put({\r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN, login)\r\n}\r\n\r\nfunction* helloSaga() {\r\n    console.log('hello saga')\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        helloSaga\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}