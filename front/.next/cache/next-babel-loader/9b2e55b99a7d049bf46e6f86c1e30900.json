{"ast":null,"code":"var _jsxFileName = \"C:\\\\playground\\\\reactNodebird\\\\nodebird\\\\front\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport Router from 'next/router';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\n\nconst TextInput = ({\n  value\n}) => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, value);\n};\n\nTextInput.propTypes = {\n  value: PropTypes.string\n};\nexport const useInput = (initValue = null) => {\n  const {\n    0: value,\n    1: setter\n  } = useState(initValue);\n  const handler = useCallback(e => {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n};\n\nconst Signup = () => {\n  const [id, onChangeId] = useInput('');\n  const [nick, onChangeNick] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const dispatch = useDispatch();\n  const {\n    isSigningUp,\n    me\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (me) {\n      alert('로그인 하였으니, 메인페이지로 이동합니다.'); //Router.push('/')\n    }\n  }, [me && me.id]);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    return dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        id,\n        password,\n        nick\n      }\n    });\n  }, [password, passwordCheck, term]);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  const onChangeTerm = useCallback(e => {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    value: \"Sign up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-nick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-password\",\n    value: password,\n    required: true,\n    type: \"password\",\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), __jsx(Input, {\n    name: \"user-password-check\",\n    value: passwordCheck,\n    required: true,\n    type: \"password\",\n    onChange: onChangePasswordCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"\\uC0BC\\uBC14\\uC758 \\uB9D0\\uC744 \\uC798 \\uB4E4\\uC744 \\uAC83\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: isSigningUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")));\n};\n\nexport default Signup;","map":{"version":3,"sources":["C:/playground/reactNodebird/nodebird/front/pages/signup.js"],"names":["React","useState","useCallback","useEffect","PropTypes","useDispatch","useSelector","Form","Input","Checkbox","Button","Router","SIGN_UP_REQUEST","TextInput","value","propTypes","string","useInput","initValue","setter","handler","e","target","Signup","id","onChangeId","nick","onChangeNick","password","onChangePassword","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","dispatch","isSigningUp","me","state","user","alert","onSubmit","preventDefault","type","data","onChangePasswordCheck","onChangeTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Input, Checkbox, Button } from 'antd'\r\nimport Router from 'next/router'\r\nimport { SIGN_UP_REQUEST } from '../reducers/user'\r\n\r\nconst TextInput = ({ value }) => {\r\n    return (\r\n        <div>{ value }</div>\r\n    )\r\n}\r\n\r\nTextInput.propTypes = {\r\n    value: PropTypes.string,\r\n}\r\n\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue)\r\n    const handler = useCallback((e) => {\r\n        setter(e.target.value)\r\n    }, [])\r\n    return [value, handler]\r\n}\r\n\r\nconst Signup = () => {\r\n\r\n    const [id, onChangeId] = useInput('')\r\n    const [nick, onChangeNick] = useInput('')\r\n    const [password, onChangePassword] = useInput('')\r\n    const [passwordCheck, setPasswordCheck] = useState('')\r\n    const [term, setTerm] = useState(false)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [termError, setTermError] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { isSigningUp, me } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        if(me) {\r\n            alert('로그인 하였으니, 메인페이지로 이동합니다.')\r\n            //Router.push('/')\r\n        }\r\n    }, [me && me.id])\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault()\r\n        if(password !== passwordCheck) {\r\n            return setPasswordError(true)\r\n        }\r\n        if(!term) {\r\n            return setTermError(true)\r\n        }\r\n\r\n        return dispatch({\r\n            type: SIGN_UP_REQUEST,\r\n            data: {\r\n                id,\r\n                password,\r\n                nick,\r\n            }\r\n        })\r\n    }, [password, passwordCheck, term])\r\n\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password)\r\n        setPasswordCheck(e.target.value)\r\n    }, [password])\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false)\r\n        setTerm(e.target.checked)\r\n    }, [])\r\n    return (\r\n        <Form onSubmit= { onSubmit } style= {{ padding: 10 }}>\r\n            <TextInput value=\"Sign up\"/>\r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br/>\r\n                <Input name=\"user-id\" value={ id } required onChange={ onChangeId }/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-nick\">닉네임</label>\r\n                <br/>\r\n                <Input name=\"user-nick\" value={ nick } required onChange={ onChangeNick }/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br/>\r\n                <Input name=\"user-password\" value={ password } required type=\"password\" onChange={ onChangePassword }/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password-check\">비밀번호</label>\r\n                <br/>\r\n                <Input name=\"user-password-check\" value={ passwordCheck } required type=\"password\" onChange={ onChangePasswordCheck }/>\r\n                {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div> }\r\n            </div>\r\n            <div>\r\n                <Checkbox name=\"user-term\" checked={ term } onChange={ onChangeTerm }>삼바의 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n                {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div> }\r\n            </div>\r\n            <div style={{ marginTop: 10 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={ isSigningUp }>가입하기</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Signup"]},"metadata":{},"sourceType":"module"}