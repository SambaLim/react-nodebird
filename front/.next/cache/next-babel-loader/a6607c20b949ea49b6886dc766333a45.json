{"ast":null,"code":"var _jsxFileName = \"C:\\\\playground\\\\reactNodebird\\\\nodebird\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Button, Input } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  useEffect(function () {\n    if (postAdded) {\n      setText('');\n    }\n  }, [postAdded]);\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text: text\n      }\n    });\n  }, []);\n  var onChangeText = useCallback(function () {\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    encType: \"multipart/form-data\",\n    style: {\n      margin: '10px 0 20px'\n    },\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    isLoading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(v),\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/playground/reactNodebird/nodebird/front/components/PostForm.js"],"names":["React","useCallback","useState","useEffect","Form","Button","Input","useSelector","useDispatch","ADD_POST_REQUEST","PostForm","dispatch","text","setText","state","user","imagePaths","isAddingPost","postAdded","onSubmitForm","e","preventDefault","type","data","onChangeText","target","value","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react'\r\nimport { Form, Button, Input } from 'antd'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { ADD_POST_REQUEST } from '../reducers/post'\r\n\r\nconst PostForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [text, setText] = useState('')\r\n    const { imagePaths, isAddingPost, postAdded } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        if(postAdded) {\r\n            setText('')\r\n        }\r\n    }, [postAdded])\r\n    \r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault()\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                text,\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const onChangeText = useCallback(() => {\r\n        setText(e.target.value)\r\n    }, [])\r\n\r\n    return (\r\n        <Form encType=\"multipart/form-data\" style={{ margin: '10px 0 20px'}} onSubmit={ onSubmitForm }>\r\n            <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" value={ text } onChange={ onChangeText }/>\r\n            <div>\r\n                <Button>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" isLoading={ isAddingPost }>짹짹</Button>\r\n            </div>\r\n            <div>\r\n            {imagePaths.map((v) => (\r\n                <div key={v} style={{ display: 'inline-block' }}>\r\n                    <img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\r\n                    <div>\r\n                    <Button>제거</Button>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm"]},"metadata":{},"sourceType":"module"}