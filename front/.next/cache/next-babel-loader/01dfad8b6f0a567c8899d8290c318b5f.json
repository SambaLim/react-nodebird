{"ast":null,"code":"import { all, fork, takeLatest, takeEvery, call, put, take } from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, signUp } from '../reducers/user';\nconst HELLO_SAGA = 'HELLO_SAGA';\n\nfunction loginAPI() {// 서버에 요청\n}\n\nfunction* login() {\n  try {\n    yield call(loginAPI);\n    yield put({\n      // dispatch와 같은역할\n      type: LOG_IN_SUCCESS\n    });\n  } catch (e) {\n    yield put({\n      type: LOG_IN_FAILURE\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, login);\n}\n\nfunction* hello() {\n  yield delay(1000);\n  yield put({\n    type: 'BYE_SAGA'\n  });\n}\n\nfunction* watchHello() {\n  yield takeEvery(HELLO_SAGA, hello);\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/playground/reactNodebird/nodebird/front/saga/user.js"],"names":["all","fork","takeLatest","takeEvery","call","put","take","LOG_IN","LOG_IN_SUCCESS","LOG_IN_FAILURE","SIGN_UP_REQUEST","signUp","HELLO_SAGA","loginAPI","login","type","e","watchLogin","LOG_IN_REQUEST","hello","delay","watchHello","watchSignUp","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,SAAhC,EAA2CC,IAA3C,EAAiDC,GAAjD,EAAsDC,IAAtD,QAAkE,oBAAlE;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,cAAjC,EAAiDC,eAAjD,EAAkEC,MAAlE,QAAgF,kBAAhF;AAEA,MAAMC,UAAU,GAAG,YAAnB;;AAEA,SAASC,QAAT,GAAoB,CAChB;AACH;;AAED,UAAUC,KAAV,GAAkB;AACd,MAAI;AACA,UAAMV,IAAI,CAACS,QAAD,CAAV;AACA,UAAMR,GAAG,CAAC;AAAE;AACRU,MAAAA,IAAI,EAAEP;AADA,KAAD,CAAT;AAGH,GALD,CAKE,OAAMQ,CAAN,EAAS;AACP,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAEN;AADA,KAAD,CAAT;AAGH;AACJ;;AAED,UAAUQ,UAAV,GAAuB;AACnB,QAAMf,UAAU,CAACgB,cAAD,EAAiBJ,KAAjB,CAAhB;AACH;;AAED,UAAUK,KAAV,GAAkB;AACd,QAAMC,KAAK,CAAC,IAAD,CAAX;AACA,QAAMf,GAAG,CAAC;AACNU,IAAAA,IAAI,EAAE;AADA,GAAD,CAAT;AAGH;;AAED,UAAUM,UAAV,GAAuB;AACnB,QAAMlB,SAAS,CAACS,UAAD,EAAaO,KAAb,CAAf;AACH;;AAED,UAAUG,WAAV,GAAwB;AACpB,QAAMnB,SAAS,CAACO,eAAD,EAAkBC,MAAlB,CAAf;AACH;;AAED,eAAe,UAAUY,QAAV,GAAqB;AAChC,QAAMvB,GAAG,CAAC,CACNC,IAAI,CAACgB,UAAD,CADE,EAENhB,IAAI,CAACqB,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, takeLatest, takeEvery, call, put, take } from 'redux-saga/effects'\r\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE, SIGN_UP_REQUEST, signUp } from '../reducers/user'\r\n\r\nconst HELLO_SAGA = 'HELLO_SAGA'\r\n\r\nfunction loginAPI() {\r\n    // 서버에 요청\r\n}\r\n\r\nfunction* login() {\r\n    try {\r\n        yield call(loginAPI)\r\n        yield put({ // dispatch와 같은역할\r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, login)\r\n}\r\n\r\nfunction* hello() {\r\n    yield delay(1000)\r\n    yield put({\r\n        type: 'BYE_SAGA'\r\n    })\r\n}\r\n\r\nfunction* watchHello() {\r\n    yield takeEvery(HELLO_SAGA, hello)\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeEvery(SIGN_UP_REQUEST, signUp)\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchSignUp)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}