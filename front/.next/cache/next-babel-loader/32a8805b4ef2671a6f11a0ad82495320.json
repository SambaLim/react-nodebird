{"ast":null,"code":"var _jsxFileName = \"C:\\\\playground\\\\reactNodebird\\\\nodebird\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Form, Button, Input } from 'antd';\nimport { useSelector, useDispatch, useEffect } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost;\n\n  var onSubmitForm = useCallback(function () {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        text: text\n      }\n    });\n  }, []);\n  var onChangeText = useCallback(function () {\n    setText(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    encType: \"multipart/form-data\",\n    style: {\n      margin: '10px 0 20px'\n    },\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    value: text,\n    onChange: onChangeText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    isLoading: isAddingPost,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: 'http://localhost:3065/' + v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/playground/reactNodebird/nodebird/front/components/PostForm.js"],"names":["React","useCallback","useState","Form","Button","Input","useSelector","useDispatch","useEffect","ADD_POST_REQUEST","PostForm","dispatch","text","setText","state","user","imagePaths","isAddingPost","onSubmitForm","type","data","onChangeText","e","target","value","margin","map","v","display","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,QAAoD,aAApD;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAEnB,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAFmB,kBAGKL,QAAQ,CAAC,EAAD,CAHb;AAAA,MAGZU,IAHY;AAAA,MAGNC,OAHM;;AAAA,qBAIkBP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAJ7B;AAAA,MAIXC,UAJW,gBAIXA,UAJW;AAAA,MAICC,YAJD,gBAICA,YAJD;;AAMnB,MAAMC,YAAY,GAAGjB,WAAW,CAAC,YAAM;AACnCU,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEV,gBADD;AAELW,MAAAA,IAAI,EAAE;AACFR,QAAAA,IAAI,EAAJA;AADE;AAFD,KAAD,CAAR;AAMH,GAP+B,EAO7B,EAP6B,CAAhC;AASA,MAAMS,YAAY,GAAGpB,WAAW,CAAC,YAAM;AACnCY,IAAAA,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,SACI,MAAC,IAAD;AAAM,IAAA,OAAO,EAAC,qBAAd;AAAoC,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA3C;AAAqE,IAAA,QAAQ,EAAGP,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,SAAS,EAAE,GAA3B;AAAgC,IAAA,WAAW,EAAC,wEAA5C;AAA8D,IAAA,KAAK,EAAGN,IAAtE;AAA6E,IAAA,QAAQ,EAAGS,YAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAE;AAAE,eAAO;AAAT,KAA9B;AAAkD,IAAA,QAAQ,EAAC,QAA3D;AAAoE,IAAA,SAAS,EAAGJ,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,UAAU,CAACU,GAAX,CAAe,UAACC,CAAD,EAAO;AACnB,WACI;AAAK,MAAA,GAAG,EAAGA,CAAX;AAAe,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAG,2BAA2BD,CAAtC;AAAyC,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAhD;AAAoE,MAAA,GAAG,EAAGF,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAFJ,CADJ;AAQH,GATA,CADL,CANJ,CADJ;AAqBH,CAxCD;;AA0CA,eAAejB,QAAf","sourcesContent":["import React, { useCallback, useState } from 'react'\r\nimport { Form, Button, Input } from 'antd'\r\nimport { useSelector, useDispatch, useEffect } from 'react-redux'\r\nimport { ADD_POST_REQUEST } from '../reducers/post'\r\n\r\nconst PostForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [text, setText] = useState('')\r\n    const { imagePaths, isAddingPost } = useSelector(state => state.user)\r\n    \r\n    const onSubmitForm = useCallback(() => {\r\n        dispatch({\r\n            type: ADD_POST_REQUEST,\r\n            data: {\r\n                text,\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const onChangeText = useCallback(() => {\r\n        setText(e.target.value)\r\n    }, [])\r\n\r\n    return (\r\n        <Form encType=\"multipart/form-data\" style={{ margin: '10px 0 20px'}} onSubmit={ onSubmitForm }>\r\n            <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" value={ text } onChange={ onChangeText }/>\r\n            <div>\r\n                <Button>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" isLoading={ isAddingPost }>짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => {\r\n                    return (\r\n                        <div key={ v } style={{ display: 'inline-block' }}>\r\n                            <img src={ 'http://localhost:3065/' + v} style={{ width: '200px' }} alt={ v } />\r\n                            <div>\r\n                                <Button>제거</Button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm"]},"metadata":{},"sourceType":"module"}