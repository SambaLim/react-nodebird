{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchAddPost),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(postSaga);\n\nimport { all, fork, takeLatest } from 'redux-saga/effects';\nimport { ADD_POST_REQUSET } from '../reducers/post';\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeLatest(ADD_POST_REQUSET, addPost);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return all([fork(watchAddPost)]);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["C:/playground/reactNodebird/nodebird/front/saga/post.js"],"names":["watchAddPost","postSaga","all","fork","takeLatest","ADD_POST_REQUSET","addPost"],"mappings":";;;;yBAGUA,Y;;;yBAIeC,Q;;AAPzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,SAAUL,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMI,UAAU,CAACC,gBAAD,EAAmBC,OAAnB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUL,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNC,IAAI,CAACH,YAAD,CADE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, takeLatest } from 'redux-saga/effects'\r\nimport { ADD_POST_REQUSET } from '../reducers/post'\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUSET, addPost)\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}