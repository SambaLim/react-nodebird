{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.321fba53980588903b52.hot-update.js","sources":["webpack:///./reducers/user.js","webpack:///./saga/user.js"],"sourcesContent":["const dummyUser = {\r\n    nickname: '삼바림',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    signUpData: {},\r\n}\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false,\r\n    user: null,\r\n    imagePaths: [],\r\n}\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\r\nexport const SING_UP_FAILURE = 'SING_UP_FAILURE' \r\n\r\nexport const loginAction = {\r\n    type: LOG_IN_REQUEST,\r\n    data: {\r\n        nickname: '삼바림'\r\n    }\r\n}\r\n\r\nexport const logoutAction = {\r\n    type: LOG_OUT_REQUEST\r\n}\r\n\r\nexport const signUpAction = (data) => {\r\n    return {\r\n        type: SIGN_UP_REQUEST,\r\n        data: data,\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOG_IN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: dummyUser\r\n            }\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null\r\n            }\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data,\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer","import { all, fork, takeLatest, takeEvery, call, put, take } from 'redux-saga/effects'\r\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user'\r\n\r\nconst HELLO_SAGA = 'HELLO_SAGA'\r\n\r\nfunction loginAPI() {\r\n    // 서버에 요청\r\n}\r\n\r\nfunction* login() {\r\n    try {\r\n        yield call(loginAPI)\r\n        yield put({ // dispatch와 같은역할\r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN_REQUEST, login)\r\n}\r\n\r\nfunction* hello() {\r\n    yield delay(1000)\r\n    yield put({\r\n        type: 'BYE_SAGA'\r\n    })\r\n}\r\n\r\nfunction* watchHello() {\r\n    yield takeEvery(HELLO_SAGA, hello)\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchHello)\r\n    ])\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AADA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AAzBA;AA2BA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACjEA;;;AAaA;;;AAIA;;;AAOA;;;AAIA;AACA;AAtCA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAGA;AAAA;AACA;AADA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AACA;AADA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAEA;AACA;AADA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}