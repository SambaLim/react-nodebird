{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.3ae64c3bc60e14a98f3d.hot-update.js","sources":["webpack:///./components/LoginForm.js","webpack:///./components/UserProfile.js","webpack:///./reducers/user.js"],"sourcesContent":["import React, { useCallback } from 'react'\r\nimport { Form, Input, Button } from 'antd'\r\nimport Link from 'next/link'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useInput } from '../pages/signup'\r\n\r\nconst LoginForm = () => {\r\n    const [id, onChangeId] = useInput('')\r\n    const [password, onChangePassword] = useInput('')\r\n    const dispatch = useDispatch()\r\n    \r\n    const onSubmitForm = useCallback((e) => {\r\n        e.preventDefault();\r\n    }, [id, password])\r\n\r\n    return (\r\n        <Form onSubmit={ onSubmitForm } style={{ padding: '10px' }}>\r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br/>\r\n                <Input name=\"user-id\" value={ id } onChange={ onChangeId } required />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br/>\r\n                <Input name=\"user-password\" value={ password } onChange={ onChangePassword } type=\"password\" required />\r\n            </div>\r\n            <div style={{ marginTop: '10px' }}>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={ false }>로그인</Button>\r\n                <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React, { useCallback } from 'react'\r\nimport { Card, Avatar, Button } from 'antd'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { logoutAction } from '../reducers/user'\r\n\r\nconst UserProfile = () => {\r\n\r\n    const { user } = useSelector(state => state.user)\r\n    const dispatch = useDispatch()\r\n    const onLogout = useCallback(() => {\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <Card\r\n            actions={[\r\n                <div key=\"twit\">짹짹<br/>{user.Post.length}</div>,\r\n                <div key=\"following\">팔로잉<br/>{user.Followings.length}</div>,\r\n                <div key=\"follower\">팔로워<br/>{user.Followers.length}</div>\r\n            ]}\r\n        >\r\n            <Card.Meta\r\n                avatar={ <Avatar>{ user.nickname[0] }</Avatar> }\r\n                title={ user.nickname }\r\n            />\r\n            <Button onClick={ onLogout }>로그아웃</Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UserProfile","const dummyUser = {\r\n    nickname: '삼바림',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    signUpData: {},\r\n}\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false, // 로그인 여부\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    isLoggingIn: false, // 로그인 시도중\r\n    logInErrorReason: '', // 로그인 실패 사유\r\n    isSignedUp: false, // 회원가입 성공\r\n    isSigningUp: false, // 회원가입 시도중\r\n    signUpErrorReason: '', // 회원가입 실패 사유\r\n    me: null,\r\n    followingList: [], // 팔로잉 리스트\r\n    followerList: [], // 팔로워 리스트\r\n    userInfo: null, // 남의 정보\r\n}\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'\r\n\r\nexport const signUp = data => ({\r\n    type: SIGN_UP_REQUEST,\r\n    data: data,\r\n})\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOG_IN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: dummyUser\r\n            }\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null\r\n            }\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            return {\r\n                ...state,\r\n                signUpData: action.data,\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAFA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAZA;AAcA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AAAA;AACA;AAGA;AAzBA;AA2BA;;;;A","sourceRoot":""}