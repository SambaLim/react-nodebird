{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.f6e0c6ef28492bf794d9.hot-update.js","sources":["webpack:///./pages/signup.js","webpack:///./reducers/user.js"],"sourcesContent":["import React, { useState, useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Form, Input, Checkbox, Button } from 'antd'\r\nimport { signUp } from '../reducers/user'\r\n\r\nconst TextInput = ({ value }) => {\r\n    return (\r\n        <div>{ value }</div>\r\n    )\r\n}\r\n\r\nTextInput.propTypes = {\r\n    value: PropTypes.string,\r\n}\r\n\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue)\r\n    const handler = useCallback((e) => {\r\n        setter(e.target.value)\r\n    }, [])\r\n    return [value, handler]\r\n}\r\n\r\nconst Signup = () => {\r\n\r\n    const [id, onChangeId] = useInput('')\r\n    const [nick, onChangeNick] = useInput('')\r\n    const [password, onChangePassword] = useInput('')\r\n    const [passwordCheck, setPasswordCheck] = useState('')\r\n    const [term, setTerm] = useState(false)\r\n    const [passwordError, setPasswordError] = useState(false)\r\n    const [termError, setTermError] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault()\r\n        if(password !== passwordCheck) {\r\n            return setPasswordError(true)\r\n        }\r\n        if(!term) {\r\n            return setTermError(true)\r\n        }\r\n    }, [password, passwordCheck, term])\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password)\r\n        setPasswordCheck(e.target.value)\r\n    }, [password])\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTermError(false)\r\n        setTerm(e.target.checked)\r\n    }, [])\r\n    return (\r\n        <Form onSubmit= { onSubmit } style= {{ padding: 10 }}>\r\n            <TextInput value=\"Sign up\"/>\r\n            <div>\r\n                <label htmlFor=\"user-id\">아이디</label>\r\n                <br/>\r\n                <Input name=\"user-id\" value={ id } required onChange={ onChangeId }/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-nick\">닉네임</label>\r\n                <br/>\r\n                <Input name=\"user-nick\" value={ nick } required onChange={ onChangeNick }/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password\">비밀번호</label>\r\n                <br/>\r\n                <Input name=\"user-password\" value={ password } required type=\"password\" onChange={ onChangePassword }/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"user-password-check\">비밀번호</label>\r\n                <br/>\r\n                <Input name=\"user-password-check\" value={ passwordCheck } required type=\"password\" onChange={ onChangePasswordCheck }/>\r\n                {passwordError && <div style={{ color: 'red' }}>비밀번호가 일치하지 않습니다.</div> }\r\n            </div>\r\n            <div>\r\n                <Checkbox name=\"user-term\" checked={ term } onChange={ onChangeTerm }>삼바의 말을 잘 들을 것을 동의합니다.</Checkbox>\r\n                {termError && <div style={{ color: 'red' }}>약관에 동의하셔야 합니다.</div> }\r\n            </div>\r\n            <div style={{ marginTop: 10 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Signup","const dummyUser = {\r\n    nickname: '삼바림',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    signUpData: {},\r\n}\r\n\r\nexport const initialState = {\r\n    isLoggedIn: false, // 로그인 여부\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    isLoggingIn: false, // 로그인 시도중\r\n    logInErrorReason: '', // 로그인 실패 사유\r\n    isSignedUp: false, // 회원가입 성공\r\n    isSigningUp: false, // 회원가입 시도중\r\n    signUpErrorReason: '', // 회원가입 실패 사유\r\n    me: null, // 내 정보\r\n    followingList: [], // 팔로잉 리스트\r\n    followerList: [], // 팔로워 리스트\r\n    userInfo: null, // 남의 정보\r\n}\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOG_IN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n                logInErrorReason: '',\r\n            }\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: true,\r\n                me: dummyUser,\r\n                isLoading: false,\r\n            }\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isLoggedIn: false,\r\n                logInErrorReason: action.error,\r\n                me: null,\r\n            }\r\n        }\r\n        case SIGN_UP_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isSigningUp: true,\r\n                isSignedUp: false,\r\n                signUpErrorReason: '',\r\n            }\r\n        }\r\n        case SIGN_UP_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isSigningUp: false,\r\n                isSignedUp: true,\r\n            }\r\n        }\r\n        case SIGN_UP_FAILURE: {\r\n            return {\r\n                ...state,\r\n                isSigningUp: false,\r\n                signUpErrorReason: action.error,\r\n            }\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAZA;AAcA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AACA;AAGA;AApDA;AAsDA;;;;A","sourceRoot":""}