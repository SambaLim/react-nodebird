{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.666f5f5f84bcdf2fbd36.hot-update.js","sources":["webpack:///./saga/user.js"],"sourcesContent":["import { all, fork, takeLatest, call, put, take } from 'redux-saga/effects'\r\nimport { LOG_IN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../reducers/user'\r\n\r\nconst HELLO_SAGA = 'HELLO_SAGA'\r\n\r\nfunction loginAPI() {\r\n    // 서버에 요청\r\n}\r\n\r\nfunction* login() {\r\n    try {\r\n        yield call(loginAPI)\r\n        yield put({ // dispatch와 같은역할\r\n            type: LOG_IN_SUCCESS\r\n        })\r\n    } catch(e) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    \r\n}\r\n\r\nfunction* watchLogin() {\r\n    yield takeLatest(LOG_IN, login)\r\n}\r\n\r\nfunction* watchHello() {\r\n    console.log('before saga')\r\n    /* 반복하고 싶다면\r\n    while(true) {\r\n        yield take(HELLO_SAGA)\r\n        console.log('hello saga')\r\n    }\r\n    */\r\n    yield take(HELLO_SAGA) // HELLO_SAGA를 기다림\r\n    console.log('hello saga')\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        watchLogin,\r\n        watchHello()\r\n    ])\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AASA;;;AAaA;;;AAIA;;;AAIA;;;AAYA;AACA;AA3CA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAGA;AAAA;AACA;AADA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AACA;AADA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;AAFA;AAQA;AACA;AATA;AAQA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}